<?php
/**
 * Created by PhpStorm.
 * User: N_Juraev
 * Date: 25.02.2016
 * Time: 8:26
 */
namespace app\models;
use yii\data\ActiveDataProvider;

class SprOperatorSearch extends SprOperator{

    public function rules(){
        return [
            [['Nazvanie','CodeOperator'], 'safe'],

        ];
    }

    public function attributeLabels()
    {
        return parent::attributeLabels(); // TODO: Change the autogenerated stub
    }

    public function search($params){
        $query=SprOperator::find();
        $dataProvider=new ActiveDataProvider([
            'query'=>$query,
            'sort'=>[
                'defaultOrder'=>['id'=>SORT_ASC]
            ]
        ]);

        if (!($this->load($params) && $this->validate())) {
            return $dataProvider;
        }

        $this->addCondition($query, 'Nazvanie', true);
        $this->addCondition($query, 'CodeOperator', true);

        return $dataProvider;
    }

    protected function addCondition($query, $attribute, $partialMatch = false)
    {
        if (($pos = strrpos($attribute, '.')) !== false) {
            $modelAttribute = substr($attribute, $pos + 1);
        } else {
            $modelAttribute = $attribute;
        }

        $value = $this->$modelAttribute;
        if (trim($value) === '') {
            return;
        }

        /*
         * The following line is additionally added for right aliasing
         * of columns so filtering happen correctly in the self join
         */
        $attribute = "spr_operator.$attribute";

        if ($partialMatch) {
            $query->andWhere(['like', $attribute, $value]);
        } else {
            $query->andWhere([$attribute => $value]);
        }
    }

}